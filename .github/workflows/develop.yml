name: Develop CI/CD

on:
  push:
    branches:
      - develop

env:
  ARTIFACT_TAG: dev
  GCP_BUCKET_NAME: demo2-11
  VERSION_URL: https://demo2.dev4.casual-trading.com/version.json
jobs:
  build:
    name: Build assets
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.config.outputs.app_version }}
      build_version: ${{ steps.config.outputs.build_version }}
      artifact: ${{ steps.config.outputs.artifact }}
    steps:
    - uses: actions/checkout@v3

    - name: Set version
      id: config
      run: |
        APP_VERSION=$(cat package.json | jq -r '.version')
        BUILD_VERSION="${APP_VERSION}-${{ env.ARTIFACT_TAG }}.${{ github.run_number }}"
        ARTIFACT="${{ github.event.repository.name }}-${BUILD_VERSION}"
        echo "APP_VERSION=$(echo $APP_VERSION)" >> $GITHUB_ENV
        echo "BUILD_VERSION=$(echo $BUILD_VERSION)" >> $GITHUB_ENV
        echo "ARTIFACT=$(echo $ARTIFACT)" >> $GITHUB_ENV
        echo "::set-output name=app_version::$APP_VERSION"
        echo "::set-output name=build_version::$BUILD_VERSION"
        echo "::set-output name=artifact::$ARTIFACT"
    - uses: actions/setup-node@v3
      name: Setup NodeJs
      with:
        node-version: 16.x
        cache: npm

    - name: Build assets
      run: |
        npm ci
        npm run build

    - name: Create version file
      run: |
        cat <<- CONFIG > dist/version.json
        {
          "app_version": "${{ env.APP_VERSION }}",
          "build_version": "${{ env.BUILD_VERSION }}"
        }
        CONFIG

    - name: Create dist archive
      run: |
        tar -zcvf ${{ env.ARTIFACT }}.tar.gz dist

    - name: Upload dist artifact
      uses: kittaakos/upload-artifact-as-is@v0
      with:
        path: ${{ env.ARTIFACT }}.tar.gz

  deploy:
    name: Deploy assets
    runs-on: ubuntu-latest
    needs: build
    env:
      APP_VERSION: ${{ needs.build.outputs.app_version }}
      BUILD_VERSION: ${{ needs.build.outputs.build_version }}
      ARTIFACT_NAME: "${{ needs.build.outputs.artifact }}.tar.gz"
    steps:

      - uses: actions/download-artifact@v3
        name: Get artifact archive
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Extract archive
        run: |
          tar -xvf ${{ env.ARTIFACT_NAME }}

      - uses: google-github-actions/auth@v0
        name: Login Google Cloud
        with:
          credentials_json: ${{ secrets.GCP_BUCKET_ADMIN }}

      - id: upload-folder
        name: Upload files to storage bucket
        uses: google-github-actions/upload-cloud-storage@v0
        with:
          path: dist
          destination: ${{ env.GCP_BUCKET_NAME }}
          parent: false

  test:
    name: Test app
    runs-on: ubuntu-latest
    needs:
      - build
      - deploy
    env:
      BUILD_VERSION: ${{ needs.build.outputs.build_version }}
    steps:
      - name: Get deployed version
        id: http_get
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.VERSION_URL }}
          method: GET

      - name: Get deployed version
        run: |
          DEPLOYED_VERSION=$(echo '${{ steps.http_get.outputs.response }}' | jq -r '.build_version')
          echo "DEPLOYED_VERSION=$(echo $DEPLOYED_VERSION)" >> $GITHUB_ENV

      - name: Compare deployed version
        run: |
          if [ "${DEPLOYED_VERSION}" = "${BUILD_VERSION}" ]
          then
            echo 'Deployed version equal to build version'
          fi
