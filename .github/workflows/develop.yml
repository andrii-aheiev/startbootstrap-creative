name: Develop CI/CD

on:
  push:
    branches: [ "develop" ]

env:
  ARTIFACT_TAG: "dev"
jobs:
  build:
    name: Build assets
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.config.outputs.app_version }}
      build_version: ${{ steps.config.outputs.build_version }}
      artifact: ${{ steps.config.outputs.artifact }}
    steps:
    - uses: actions/checkout@v3

    - name: Set version
      id: config
      run: |
        APP_VERSION=$(cat package.json | jq -r '.version')
        BUILD_VERSION="${APP_VERSION}-${{ env.ARTIFACT_TAG }}.${{ github.run_number }}"
        ARTIFACT="${{ github.event.repository.name }}-${BUILD_VERSION}"
        echo "APP_VERSION=$(echo $APP_VERSION)" >> $GITHUB_ENV
        echo "BUILD_VERSION=$(echo $BUILD_VERSION)" >> $GITHUB_ENV
        echo "ARTIFACT=$(echo $ARTIFACT)" >> $GITHUB_ENV
        echo "::set-output name=app_version::$APP_VERSION"
        echo "::set-output name=build_version::$BUILD_VERSION"
        echo "::set-output name=artifact::$ARTIFACT"

  deploy:
    name: Deploy assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: |
          echo "app_version: ${{ needs.build.outputs.app_version }}"
          echo "build_version: ${{ needs.build.outputs.build_version }}"
          echo "artifact: ${{ needs.build.outputs.artifact }}"

#    - uses: actions/setup-node@v3
#      name: Setup NodeJs
#      with:
#        node-version: 16.x
#        cache: 'npm'
#
#    - name: Build assets
#      run: |
#        npm ci
#        npm run build
#
#    - name: Create version file
#      run: |
#        cat <<- CONFIG > dist/version.json
#        {
#          "app_version": "${{ env.APP_VERSION }}",
#          "build_version": "${{ env.BUILD_VERSION }}"
#        }
#        CONFIG
#
#    - name: Create dist archive
#      run: |
#        tar -zcvf ${{ env.ARTIFACT }}.tar.gz dist
#
#    - name: Upload dist artifact
#      uses: kittaakos/upload-artifact-as-is@v0
#      with:
#        path: ${{ env.ARTIFACT }}.tar.gz
